@using Dominio
@model Dominio.Proyecto

@{
    ViewData["Title"] = "EditTecnologia";
}

<h1>Editar Tecnologías</h1>

<h4>Proyecto</h4>
<hr />

<div class="row">
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tecnologias)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Tecnologias.Count() == 0)
            {
                <p>No hay tecnologías cargadas para este proyecto</p>
            }
            else
            {
                foreach (Aptitud a in Model.Tecnologias)
                {
                    <p>@a.Nombre | @Html.ActionLink("Eliminar", "DeleteTecnologia", new { a.Id, idProyecto = Model.Id })</p>
                }
            }
        </dd>
    </dl>
    <div class="col-md-4">
        <form asp-action="EditTecnologia">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" readonly />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="tecnologia" class="control-label">Tecnología</label>
                <input for="tecnologia" name="tecnologia" class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" value="Añadir Tecnología" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <p>@ViewBag.msg</p>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

